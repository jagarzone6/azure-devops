{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environment": {
            "type": "string",
            "allowedValues": [ "Dev", "Qa", "Stage" ],
            "metadata": {
                "description": "The environment name."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Premium_LRS",
                "Premium_ZRS",
                "Standard_GRS",
                "Standard_GZRS",
                "Standard_LRS",
                "Standard_RAGRS",
                "Standard_RAGZRS",
                "Standard_ZRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "storageAccountKey": {
            "type": "string",
            "metadata": {
                "description": "Stogare Account Key."
            }
        },
        "sqlDBName": {
            "type": "string",
            "defaultValue": "SampleDB",
            "metadata": {
                "description": "The name of the SQL Database."
            }
        },
        "administratorLogin": {
            "type": "string",
            "metadata": {
                "description": "The administrator username of the SQL logical server."
            }
        },
        "subscriptionId": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
                "description": "The name of the subscription."
            }
        },
        "vaultConnectionString": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "dbAdminPassword": {
            "type": "string",
            "metadata": {
                "description": "dbPasswordResourceId"
            }
        }
    },
    "variables": {
        "appName": "JG",
        "storageAccountName": "[toLower(concat(variables('appName'),'StorageAccount', parameters('environment')))]",
        "sqlServerName": "[concat(variables('appName'),'SqlServer', parameters('environment'))]",
        "linuxAppServicePlanName": "[concat(variables('appName'),'-LinuxAppServicePlan-', parameters('environment'))]",
        "angularAppName": "[concat(variables('appName'),'-AngularApp-', parameters('environment'))]",
        "tagName": "[concat('JG-', parameters('environment'))]",
        "windowsAppServicePlanName": "[concat(variables('appName'),'-NetappServicePlan-', parameters('environment'))]",
        "windowsApiAppName": "[concat(variables('appName'),'-NetApi-', parameters('environment'))]"
    },
    "functions": [],
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            },
            "kind": "StorageV2",
            "properties": {}
        },
        {
            "name": "[variables('windowsAppServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 1
            },
            "tags": {
                "displayName": "[variables('tagName')]"
            },
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-02-01",
            "name": "[variables('windowsApiAppName')]",
            "location": "[parameters('location')]",
            "kind": "apiApp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('windowsAppServicePlanName'))]",
                "[resourceId(parameters('subscriptionId'), resourceGroup().name, 'Microsoft.Sql/servers', concat(variables('sqlServerName')))]"
            ],
            "tags": {
                "displayName": "[variables('tagName')]"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('windowsAppServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "kind": "app,windows",
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0,
                    "metadata": [
                        {
                            "name": "CURRENT_STACK",
                            "value": "dotnet"
                        }
                    ],
                    "netFrameworkVersion": "v6.0"
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            },
            "resources": [
                {
                    "type": "Microsoft.Web/sites/config",
                    "apiVersion": "2021-02-01",
                    "name": "[concat(variables('windowsApiAppName'), '/web')]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', variables('windowsApiAppName'))]",
                        "[resourceId(parameters('subscriptionId'), resourceGroup().name,'Microsoft.Sql/servers', concat(variables('sqlServerName')))]"
                    ],
                    "properties": {
                        "connectionStrings": [
                            {
                                "name": "myDefaultConnection",
                                "type": "SQLServer",
                                "connectionString": "[concat('Database=', parameters('sqlDBName'), ';Server=', reference(resourceId(parameters('subscriptionId'), resourceGroup().name,'Microsoft.Sql/servers',variables('sqlServerName'))).fullyQualifiedDomainName, ';User Id=', parameters('administratorLogin'),'@', variables('sqlServerName'),';Password=', parameters('dbAdminPassword'))]"
                            },
                            {
                                "name": "vaultConnection",
                                "type": "Custom",
                                "connectionString": "[parameters('vaultConnectionString')]"
                            },
                            {
                                "name": "storageConnection",
                                "type": "Custom",
                                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=', parameters('storageAccountKey') )]"
                            }
                        ]

                    }
                }
            ]
        },
        {
            "name": "[variables('linuxAppServicePlanName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2021-02-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "F1",
                "tier": "Free",
                "size": "F1",
                "family": "F",
                "capacity": 1
            },
            "kind": "linux",
            "tags": {
                "displayName": "[variables('tagName')]"
            },
            "properties": {
                "perSiteScaling": false,
                "elasticScaleEnabled": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0,
                "zoneRedundant": false
            }
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2021-02-01",
            "name": "[variables('angularAppName')]",
            "location": "[parameters('location')]",
            "kind": "app,linux",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('linuxAppServicePlanName'))]"
            ],
            "tags": {
                "displayName": "[variables('tagName')]"
            },
            "properties": {
                "enabled": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('linuxAppServicePlanName'))]",
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "kind": "app,linux",
                "siteConfig": {
                    "numberOfWorkers": 1,
                    "acrUseManagedIdentityCreds": false,
                    "alwaysOn": false,
                    "http20Enabled": false,
                    "functionAppScaleLimit": 0,
                    "minimumElasticInstanceCount": 0,
                    "comments": "HTML app. No additional configuration needed."
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "clientCertMode": "Required",
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": false,
                "redundancyMode": "None",
                "storageAccountRequired": false,
                "keyVaultReferenceIdentity": "SystemAssigned"
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2020-02-02-preview",
            "name": "[variables('sqlServerName')]",
            "location": "[parameters('location')]",
            "properties": {
                "administratorLogin": "[parameters('administratorLogin')]",
                "administratorLoginPassword": "[parameters('dbAdminPassword')]"
            },
            "resources": [
                {
                    "type": "databases",
                    "apiVersion": "2020-08-01-preview",
                    "name": "[parameters('sqlDBName')]",
                    "location": "[parameters('location')]",
                    "sku": {
                        "name": "Standard",
                        "tier": "Standard"
                    },
                    "dependsOn": [
                        "[resourceId('Microsoft.Sql/servers', concat(variables('sqlServerName')))]"
                    ],
                    "properties": {}
                }
            ]
        }
    ],
    "outputs": {}
}
